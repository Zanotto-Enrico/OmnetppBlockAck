[General]
network = BlockAckShowcase
sim-time-limit = 1s

# traffic
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[0].destAddresses = "host2"
*.host1.app[0].destPort = 1000
*.host1.app[0].messageLength = 700B
*.host1.app[0].sendInterval = 0.1ms		# 10 Mbps
*.host1.app[0].packetName = "Data"

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[0].localPort = 1000

# arp
*.host*.ipv4.arp.arp.typename = "GlobalArp"

# qos
*.host*.wlan[*].mac.qosStation = true
*.host*.wlan[*].classifier.typename = "QosClassifier"

# block ack
*.host*.wlan[*].mac.hcf.isBlockAckSupported = true

# radio
*.host*.wlan[*].radio.receiver.energyDetection = -105dBm
*.host*.wlan[*].radio.receiver.sensitivity = -105dBm
*.host*.wlan[*].radio.receiver.snirThreshold = 0dB

*.host*.wlan[*].radio.transmitter.power = 0.12mW

# disable 802.11 fragmentation and aggregation
**.hcf.originatorMacDataService.fragmentationPolicy.fragmentationThreshold = 10000B
**.hcf.originatorMacDataService.msduAggregationPolicy.aggregationLengthThreshold = 10000

# visualizer
*.visualizer.*.physicalLinkVisualizer.displayLinks = true
*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.infoVisualizer.modules = "*.host2.app[0]"
*.visualizer.*.infoVisualizer.format = "%t"
*.visualizer.*.packetDropVisualizer.displayPacketDrops = true
*.visualizer.*.packetDropVisualizer.labelFormat = "%r"

[Config NormalRun]
description = "1500B packets, no fragmentation, no BlockAck "
*.sourceHost.app[*].messageLength = ${packetLength = 1500}byte
*.sourceHost.app[*].sendInterval = ${packetLength} * 8 / ${bitrate} * 1us
*.*Host.wlan[*].mac.hcf.isBlockAckSupported = false


[Config BlockAck]
description = "1500B packets, no fragmentation, BlockAck with threshold of 16"
*.sourceHost.app[*].messageLength = ${packetLength = 1500}byte
*.sourceHost.app[*].sendInterval = ${packetLength} * 8 / ${bitrate} * 1us
*.*Host.wlan[*].mac.hcf.isBlockAckSupported = true
*.*Host.wlan[*].mac.hcf.originatorAckPolicy.blockAckReqThreshold = 16


[Config blockAckThresholds]
description = "comparing different frames thresholds before sending the BA"
*.sourceHost.app[*].messageLength = ${packetLength = 1500}byte
*.sourceHost.app[*].sendInterval = ${packetLength} * 8 / ${bitrate} * 1us
*.*Host.wlan[*].mac.hcf.isBlockAckSupported = ${isBlockAckSupported=true}
*.*Host.wlan[*].mac.hcf.originatorAckPolicy.blockAckReqThreshold =
${blockAckReqThreshold=4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64}


[Config blockAckFragmentations]
description = "comparing BlockAck vs NoBlockAck with different frames length"
*.sourceHost.app[*].messageLength = ${packetLength =
100,300,500,700,1000,1500,2000}byte
*.sourceHost.app[*].sendInterval = ${packetLength} * 8 / ${bitrate} * 1us
*.*Host.wlan[*].mac.hcf.isBlockAckSupported = ${isBlockAckSupported=true,false}
*.*Host.wlan[*].mac.hcf.originatorAckPolicy.blockAckReqThreshold = 64